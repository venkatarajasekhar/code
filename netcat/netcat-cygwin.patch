diff -aur ./netcat-0.7.1/config.h.in ./netcat-0.7.1_new//config.h.in
--- ./netcat-0.7.1/config.h.in	2004-01-11 21:46:28.000000000 +0100
+++ ./netcat-0.7.1_new//config.h.in	2010-11-05 20:48:07.250141000 +0100
@@ -175,7 +175,10 @@
 /* Define to 1 if the system has the type `struct in_pktinfo'. */
 #undef HAVE_STRUCT_IN_PKTINFO
 
-/* Define to 1 if `sa_len' is member of `struct sockaddr'. */
+/* Define to 1 if `ipi_spec_dst' is a member of `struct in_pktinfo'. */
+#undef HAVE_STRUCT_IN_PKTINFO_IPI_SPEC_DST
+
+/* Define to 1 if `sa_len' is a member of `struct sockaddr'. */
 #undef HAVE_STRUCT_SOCKADDR_SA_LEN
 
 /* Define to 1 if you have the <sys/param.h> header file. */
@@ -229,6 +232,9 @@
 /* Define to the one symbol short name of this package. */
 #undef PACKAGE_TARNAME
 
+/* Define to the home page for this package. */
+#undef PACKAGE_URL
+
 /* Define to the version of this package. */
 #undef PACKAGE_VERSION
 
@@ -237,7 +243,7 @@
 
 /* If using the C implementation of alloca, define if you know the
    direction of stack growth for your system; otherwise it will be
-   automatically deduced at run-time.
+   automatically deduced at runtime.
 	STACK_DIRECTION > 0 => grows toward higher addresses
 	STACK_DIRECTION < 0 => grows toward lower addresses
 	STACK_DIRECTION = 0 => direction of growth unknown */
@@ -270,10 +276,10 @@
 #undef inline
 #endif
 
-/* Define to `long' if <sys/types.h> does not define. */
+/* Define to `long int' if <sys/types.h> does not define. */
 #undef off_t
 
-/* Define to `unsigned' if <sys/types.h> does not define. */
+/* Define to `unsigned int' if <sys/types.h> does not define. */
 #undef size_t
 
 /* Define to unsigned long or unsigned long long if <inttypes.h> and
diff -aur ./netcat-0.7.1/configure.ac ./netcat-0.7.1_new//configure.ac
--- ./netcat-0.7.1/configure.ac	2004-01-03 17:49:16.000000000 +0100
+++ ./netcat-0.7.1_new//configure.ac	2010-11-05 20:37:48.277148600 +0100
@@ -75,6 +75,9 @@
 AC_CHECK_TYPES([struct in_pktinfo, in_port_t], , , [#include <sys/types.h>
 #include <netinet/in.h>])
 
+dnl Check if ipi_spec_dst field is available.
+AC_CHECK_MEMBERS(struct in_pktinfo.ipi_spec_dst, , ,)
+
 # check if this compiler supports the common parameter `-Wall'
 if test -n "$GCC"; then
   CFLAGS="$CFLAGS -Wall"
diff -aur ./netcat-0.7.1/src/netcat.h ./netcat-0.7.1_new//src/netcat.h
--- ./netcat-0.7.1/src/netcat.h	2004-01-03 17:42:07.000000000 +0100
+++ ./netcat-0.7.1_new//src/netcat.h	2010-11-05 20:15:39.593106600 +0100
@@ -90,8 +90,10 @@
 /* Find out whether we can use the RFC 2292 extensions on this machine
    (I've found out only linux supporting this feature so far) */
 #ifdef HAVE_STRUCT_IN_PKTINFO
-# if defined(SOL_IP) && defined(IP_PKTINFO)
-#  define USE_PKTINFO
+# ifdef HAVE_STRUCT_IN_PKTINFO_IPI_SPEC_DST
+#  if defined(SOL_IP) && defined(IP_PKTINFO)
+#   define USE_PKTINFO
+#  endif
 # endif
 #endif
 
diff -aur ./netcat-0.7.1/src/network.c ./netcat-0.7.1_new//src/network.c
--- ./netcat-0.7.1/src/network.c	2004-01-03 17:42:07.000000000 +0100
+++ ./netcat-0.7.1_new//src/network.c	2010-11-05 20:24:54.032103800 +0100
@@ -358,12 +358,22 @@
   /* don't leave the socket in a TIME_WAIT state if we close the connection */
   fix_ling.l_onoff = 1;
   fix_ling.l_linger = 0;
+  
+  /* SO_LINGER is not valid for SOCK_DGRAM on Windows */
+  #if defined(__CYGWIN__) || defined(_WIN32)
+  if (SOCK_DGRAM != type)
+  {
+  #endif
   ret = setsockopt(sock, SOL_SOCKET, SO_LINGER, &fix_ling, sizeof(fix_ling));
   if (ret < 0) {
+    ncprint(NCPRINT_WARNING | NCPRINT_VERB1, strerror(errno));
     close(sock);		/* anyway the socket was created */
     return -2;
   }
-
+  #if defined(__CYGWIN__) || defined(_WIN32)
+  }
+  #endif
+   
   /* fix the socket options */
   sockopt = 1;
   ret = setsockopt(sock, SOL_SOCKET, SO_REUSEADDR, &sockopt, sizeof(sockopt));
